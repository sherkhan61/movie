{"version":3,"sources":["features/topRated/TopRated.jsx"],"names":["TopRated","dispatch","useDispatch","results","useSelector","state","topRated","currentPage","totalPageCount","pageSize","useEffect","getResults","onPageChanged","pageNumber","topRatedActions","setCurrentPage","pages","i","push","className","s","pages__row","role","aria-label","map","p","onClick","type","main__row","r","movie__block","row","to","id","alt","src","poster_path","text__block","title","date","release_date"],"mappings":"gGAAA,0EAyFeA,UAlFE,WAEb,IAAMC,EAAWC,cAEXC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,WAChDI,EAAcH,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,eAEpDC,GADWJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASG,YAChCL,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASE,mBAG7DE,qBAAU,WACNT,EAASU,YAAWJ,MACrB,CAACA,IASJ,IANA,IAAMK,EAAgB,SAACC,GACnBZ,EAASa,IAAgBC,eAAeF,IACxCF,YAAWJ,IAGXS,EAAQ,GACHC,EAAI,EAAGA,GAAKT,EAAgBS,IACjCD,EAAME,KAAKD,GAIf,OACI,mCACMd,EAEM,gCACI,qBAAKgB,UAAWC,IAAEC,WAAlB,SACI,qBAAKF,UAAU,iBAAiBG,KAAK,QAAQC,aAAW,cAAxD,SACKP,EAAMQ,KAAI,SAAAC,GACP,OACI,wBAAQC,QAAS,kBAAOd,EAAca,IAAKE,KAAK,SACxCR,UAAU,oBADlB,SACuCM,WAKvD,qBAAKN,UAAWC,IAAEQ,UAAlB,SACKzB,EAAUA,EAAQqB,KAAI,SAAAK,GACnB,OACI,qBAAKV,UAAWC,IAAEU,aAAlB,SACI,sBAAKX,UAAWC,IAAEW,IAAlB,UACI,8BACI,cAAC,IAAD,CAASC,GAAI,eAAiBH,EAAEI,GAAhC,SACI,qBAAKC,IAAI,SACJC,IAAG,yCAAoCN,EAAEO,mBAGtD,sBAAKjB,UAAWC,IAAEiB,YAAlB,UACI,qBAAKlB,UAAWC,IAAEkB,MAAlB,SACKT,EAAES,QAEP,qBAAKnB,UAAWC,IAAEmB,KAAlB,SACKV,EAAEW,sBAbkBX,EAAEI,OAmB1C,OAET,qBAAKd,UAAWC,IAAEC,WAAlB,SACI,qBAAKF,UAAU,iBAAiBG,KAAK,QAAQC,aAAW,cAAxD,SACKP,EAAMQ,KAAI,SAAAC,GACP,OACI,wBAAQC,QAAS,kBAAOd,EAAca,IAAKE,KAAK,SACxCR,UAAU,oBADlB,SACuCM,cAzC/D,cAAC,IAAD","file":"static/js/4.f32ad9c3.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../popular/Popular.module.scss\";\r\nimport {Preloader} from \"../../ui/preloader/Preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getResults, topRatedActions} from \"./modules/actions\";\r\n\r\nconst TopRated = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const results = useSelector((state) => state.topRated.results);\r\n    const currentPage = useSelector((state) => state.topRated.currentPage);\r\n    const pageSize = useSelector((state) => state.topRated.pageSize);\r\n    const totalPageCount = useSelector((state) => state.topRated.totalPageCount);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getResults(currentPage));\r\n    }, [currentPage]);\r\n\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        dispatch(topRatedActions.setCurrentPage(pageNumber));\r\n        getResults(currentPage);\r\n    }\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!results ?\r\n                <Preloader/> : (\r\n                    <div>\r\n                        <div className={s.pages__row}>\r\n                            <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n                                {pages.map(p => {\r\n                                    return (\r\n                                        <button onClick={() => (onPageChanged(p))} type=\"button\"\r\n                                                className=\"btn btn-secondary\">{p}</button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.main__row}>\r\n                            {results ? results.map(r => {\r\n                                return (\r\n                                    <div className={s.movie__block} key={r.id}>\r\n                                        <div className={s.row}>\r\n                                            <div>\r\n                                                <NavLink to={\"/movieblock/\" + r.id}>\r\n                                                    <img alt=\"poster\"\r\n                                                         src={`https://image.tmdb.org/t/p/w200${r.poster_path}`}/>\r\n                                                </NavLink>\r\n                                            </div>\r\n                                            <div className={s.text__block}>\r\n                                                <div className={s.title}>\r\n                                                    {r.title}\r\n                                                </div>\r\n                                                <div className={s.date}>\r\n                                                    {r.release_date}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }) : null}\r\n                        </div>\r\n                        <div className={s.pages__row}>\r\n                            <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n                                {pages.map(p => {\r\n                                    return (\r\n                                        <button onClick={() => (onPageChanged(p))} type=\"button\"\r\n                                                className=\"btn btn-secondary\">{p}</button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopRated;"],"sourceRoot":""}